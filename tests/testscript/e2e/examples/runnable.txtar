exec mkdir -p $WORK/.local/share/dse-graph
exec cp -r $ENTRYDIR/graph/cmd/graph/reports $WORK/.local/share/dse-graph/
env HOME=$WORK

env DSE_DIR=$REPODIR/examples/runnable

exec cp $DSE_DIR/runnable.dse $WORK/

exec sh -e $WORK/build.sh runnable.dse

stdout 'Parameters:'
stdout '  input_file = runnable.dse'
stdout '  output_file = runnable.json'
stdout 'Read from file: runnable.dse'
stdout 'Parsing ...'
stdout 'Writing to file: runnable.json'

stderr 'Running command: convert'
stderr '  input          : runnable.json'
stderr '  log            : 4'
stderr '  output         : runnable.yaml'
stderr 'Reading file: runnable.json'
stderr 'Writing file: runnable.yaml'

stderr 'Running command: resolve'
stderr '  cache          : out/cache'
stderr '  input          : runnable.yaml'
stderr 'INFO Reading AST file file=runnable.yaml'
stderr 'INFO Load metadata files'
stderr 'INFO Update metadata for repo name=fsil.runnable'
stderr 'INFO Update metadata for repo name=dse.fmi'
stderr 'INFO Updating AST file file=runnable.yaml'
stderr 'INFO Uses item name=dse.fmi'
stderr 'INFO Merge metadata to spec\/uses\[\] name=dse.fmi'
stderr 'Updating model metadata model=fsil.runnable name=runnable'
stderr 'INFO Repo metadata located repo=fsil.runnable model=fsil.runnable'
stderr 'INFO Task metadata located repo=fsil.runnable taskName=generate-runnable'
stderr 'INFO Updating model uses model=fsil.runnable name=runnable'

stderr 'Running command: generate'
stderr '  input          : runnable.yaml'
stderr '  log            : 4'
stderr '  simulation     : false'
stderr '  taskfile       : false'
stderr 'Reading file: runnable.yaml'
stderr 'Writing to folder: .'
stderr 'Writing taskfile: Taskfile.yml'
stderr 'Writing simulation: simulation.yaml'

stderr 'task: "dse.fmi-v1.1.34:gen-modelcfmu-annotations" finished'
stderr 'task: "dse.fmi-v1.1.34:gen-fmu" started'
stderr 'Running FMI Toolset command: gen-fmu'
stderr 'task: "dse.fmi-v1.1.34:gen-fmu" finished'
stderr 'task: "dse.fmi-v1.1.34:generate-fmimodelc" finished'
stderr 'task: "model-runnable" finished'
stderr 'task: "build-models" finished'
stderr 'task: "build" finished'
stderr 'task: "default" finished'

exec sh -e $WORK/report.sh

stdout 'Name: Duplicate Writes Check'
stdout 'Query: Duplicate Write Signals'
stdout 'Evaluation: Report Passed'
stdout 'Name: ModelInstance Name Check'
stdout 'Query: Unique ModelInstance Name'
stdout 'Evaluation: Report Passed'
stdout 'Name: Model UID Check'
stdout 'Query: Unique Non-zero Model UID'
stdout 'Evaluation: Report Passed'
stdout 'Query: Expected Count'
stdout 'Evaluation: Report Passed'
stdout 'Query: Model to Channel Mapping'
stdout 'Query: Expected Count'
stdout 'Evaluation: Report Passed'
stdout 'Ran 5 Reports | Passed: 5 | Failed: 0'

exec sh -e $WORK/simer.sh

stdout 'Load YAML File: data/simulation.yaml'
stdout 'Load YAML File: model/runnable/data/model.yaml'
stdout 'Load YAML File: model/runnable/data/target_runnable.yaml'
stdout 'Load YAML File: model/runnable/data/target_signalgroup.yaml'
stdout 'Load YAML File: model/runnable/data/target_signalgroup_blocks.yaml'
stdout 'Model Name: fsil.runnable'
stdout 'Model File: model/runnable/lib/runnable.so'
stdout 'Model Location: model/runnable/lib/runnable.so'
stdout 'Loading dynamic model: model/runnable/lib/runnable.so ...'

-- build.sh --
INPUT_DSE="$1"
export TASK_X_REMOTE_TASKFILES=1
export DSE_BUILDER_IMAGE=ghcr.io/boschglobal/dse-builder:latest
docker run --rm \
    --network=host \
		-e AR_USER -e AR_TOKEN -e GHE_USER -e GHE_TOKEN -e GHE_PAT \
    -e http_proxy -e https_proxy -e no_proxy \
		-v $(pwd):/workdir \
    --user $(id -u):$(id -g) \
		"$DSE_BUILDER_IMAGE" "$INPUT_DSE"
task -y -v

-- report.sh --
export DSE_REPORT_IMAGE=ghcr.io/boschglobal/dse-report:latest
docker run --rm \
		-v $(pwd)/out/sim:/sim \
		"$DSE_REPORT_IMAGE" /sim

-- simer.sh --
export DSE_SIMER_IMAGE=ghcr.io/boschglobal/dse-simer:latest
docker run --rm \
  -v "$(pwd)/out/sim":/sim \
  -p 2159:2159 -p 6379:6379 \
  "$DSE_SIMER_IMAGE" \
  -redis="" \
  -simbus="" \
  -transport="loopback" \
  -uri="loopback" \
  -endtime 0.100 \
  -logger 4 \
  -env SIMBUS_LOGLEVEL=2