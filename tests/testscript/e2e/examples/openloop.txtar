exec mkdir -p $WORK/.local/share/dse-graph
exec cp -r $ENTRYDIR/graph/cmd/graph/reports $WORK/.local/share/dse-graph/
env HOME=$WORK

env DSE_DIR=$REPODIR/examples/vscode

exec mkdir -p $WORK/input
exec cp -r $DSE_DIR/input/. $WORK/input
exec cp $DSE_DIR/openloop.dse $WORK/

exec cp $REPODIR/tests/testscript/scripts/workflow.sh $WORK/workflow.sh
exec sh -e $WORK/workflow.sh openloop.dse

# dse-builder

stdout 'Parameters:'
stdout '  input_file = openloop.dse'
stdout '  output_file = openloop.json'
stdout 'Read from file: openloop.dse'
stdout 'Parsing ...'
stdout 'Writing to file: openloop.json'

stderr 'Running command: convert'
stderr '  input          : openloop.json'
stderr '  log            : 4'
stderr '  output         : openloop.yaml'
stderr 'Reading file: openloop.json'
stderr 'Writing file: openloop.yaml'

stderr 'Running command: resolve'
stderr '  cache          : out/cache'
stderr '  input          : openloop.yaml'
stderr 'INFO Reading AST file file=openloop.yaml'
stderr 'INFO Update metadata for repo name=dse.modelc'
stderr 'INFO Update metadata for repo name=dse.fmi'
stderr 'INFO Updating model metadata model=dse.modelc.csv name=input'
stderr 'INFO Repo metadata located repo=dse.modelc model=dse.modelc.csv'
stderr 'INFO Updating model uses model=dse.modelc.csv name=input'
stderr 'INFO Updating model metadata model=dse.fmi.mcl name=linear'
stderr 'INFO Repo metadata located repo=dse.fmi model=dse.fmi.mcl'
stderr 'INFO Task metadata located repo=dse.fmi taskName=generate-fmimcl'
stderr 'INFO Updating model uses model=dse.fmi.mcl name=linear'

stderr 'Running command: generate'
stderr '  input          : openloop.yaml'
stderr '  log            : 4'
stderr '  simulation     : false'
stderr '  taskfile       : false'
stderr 'Reading file: openloop.yaml'
stderr 'Writing to folder: .'
stderr 'Writing taskfile: Taskfile.yml'
stderr 'Writing simulation: simulation.yaml'

stdout 'SIM Model input -> sim/model/input'
stdout 'SIM Model linear -> sim/model/linear'
stderr 'task: "default" started'
stderr 'task: "build" started'
stderr 'task: "build-models" started'
stderr 'task: "model-input" started'
stderr 'task: "model-linear" started'
stderr 'task: "download-file" started'
stderr 'task: "download-file" finished'
stderr 'task: "model-input" finished'
stderr 'task: "dse.fmi-v[0-9]+\.[0-9]+\.[0-9]+:generate-fmimcl" started'
stderr 'task: "dse.fmi-v[0-9]+\.[0-9]+\.[0-9]+:gen-mcl" started'
stderr 'task: "dse.fmi-v[0-9]+\.[0-9]+\.[0-9]+:gen-mcl" finished'
stderr 'task: "dse.fmi-v[0-9]+\.[0-9]+\.[0-9]+:gen-signalgroup" started'
stderr 'task: "dse.fmi-v[0-9]+\.[0-9]+\.[0-9]+:gen-signalgroup" finished'
stderr 'task: "dse.fmi-v[0-9]+\.[0-9]+\.[0-9]+:generate-fmimcl" finished'
stderr 'task: "model-linear" finished'
stderr 'task: "build-models" finished'
stderr 'task: "build" finished'
stderr 'task: "default" finished'

# dse-report

stdout 'Name: Duplicate Writes Check'
stdout 'Query: Duplicate Write Signals'
stdout 'Evaluation: Report Passed'
stdout 'Name: ModelInstance Name Check'
stdout 'Query: Unique ModelInstance Name'
stdout 'Evaluation: Report Passed'
stdout 'Name: Model UID Check'
stdout 'Query: Unique Non-zero Model UID'
stdout 'Evaluation: Report Passed'
stdout 'Query: Expected Count'
stdout 'Evaluation: Report Passed'
stdout 'Query: Model to Channel Mapping'
stdout 'Query: Expected Count'
stdout 'Evaluation: Report Passed'
stdout 'Name: Simbus Channel Name Consistency'
stdout 'Query: Channel Name Match'
stdout 'Evaluation: Report Passed'
stdout 'Ran 6 Reports | Passed: 6 | Failed: 0'

# dse-simer

stdout 'Load YAML File: data/simulation\.yaml'
stdout 'Load YAML File: model/input/data/model.yaml'
stdout 'Loading symbol: model_create \.\.\. ok'
stdout 'Loading symbol: model_step \.\.\. ok'
stdout 'Loading symbol: model_destroy \.\.\. ok'
stdout 'Measurement File: /sim/measurement\.mf4'
