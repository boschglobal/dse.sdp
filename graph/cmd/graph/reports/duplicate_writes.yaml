---
name: Duplicate Writes Check
queries:
  - name: Duplicate Write Signals
    expect_rows: false
    query: |
      // Get output signals for each SimbusChannel.
      MATCH (sc:SimbusChannel)<-[:Belongs]-(ch1:Channel)
      -[:Represents]->(:SignalGroup)-[:Contains]->(s1:Signal)
      WHERE s1.annotations.fmi_variable_causality = "output"
      WITH sc AS simbus_channel, collect(DISTINCT s1.name) AS output_signals

      // Get input signals from input model instance with matching selector.channel.
      MATCH (sc:SimbusChannel)<-[:Belongs]-(ch2:Channel)<-[:Alias]-
      (mi:ModelInst {name: "input"})-[:InstanceOf]->(:Model)
      MATCH (mi)-[:Has]->(sel:Selector)-[:Selects]->(:Label)
      <-[:Has]-(:SignalGroup)-[:Contains]->(s2:Signal)
      WITH simbus_channel, output_signals, collect(DISTINCT s2.name) AS input_signal_list

      // Find intersection using UNWIND and WHERE.
      UNWIND input_signal_list AS individual_input_signal
      WITH simbus_channel, output_signals, input_signal_list, individual_input_signal
      WHERE individual_input_signal IN output_signals
      WITH simbus_channel, output_signals, input_signal_list,
      collect(individual_input_signal) AS common_signals

      RETURN simbus_channel, common_signals

tags:
  - signal
  - write
