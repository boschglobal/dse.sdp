---
name: CI

on:  # yamllint disable-line rule:truthy
  workflow_dispatch:
  push:
    branches: [main, devel]
    tags:
      - 'v*.*.*'
  pull_request:
    branches: [main, devel]

permissions:
  contents: read
  pull-requests: read
  packages: read

env:
  REGISTRY: ghcr.io
  IMAGE_BASE_NAME: ${{ github.repository_owner }}/dse
  PACKAGE_VERSION: 0.0.2

jobs:
  build:
    runs-on: [ubuntu-latest]
    strategy:
      matrix:
        package_arch:
          - linux-amd64
          - linux-x86
          - linux-i386
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Build package metadata
        id: package_meta
        uses: docker/metadata-action@v5
        with:
          images: dse/sdp
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}

      - name: Get package version
        if: startsWith(github.ref, 'refs/tags/')
        id: package
        run: |
          echo "PACKAGE_VERSION=${{ fromJSON(steps.package_meta.outputs.json).labels['org.opencontainers.image.version'] }}" >> $GITHUB_ENV

      - name: Build
        env:
          PACKAGE_ARCH: ${{ matrix.package_arch }}
        run: |
          make examples

      - uses: actions/upload-artifact@v4
        with:
          name: Models-${{ matrix.package_arch }}-package
          path: |
            examples/models/build/_dist/Models-${{ env.PACKAGE_VERSION }}-${{ matrix.package_arch }}.zip
          retention-days: 1

  release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: [ubuntu-latest]
    needs: [build]
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Create Release from Tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
        run: |
          gh release create "$tag" \
            --notes-from-tag

  publish_examples:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: [ubuntu-latest]
    needs: [build, release]
    permissions:
      contents: write
      packages: write
    strategy:
      matrix:
        package_arch:
          - linux-amd64
          - linux-x86
          - linux-i386
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Build package metadata
        id: package_meta
        uses: docker/metadata-action@v5
        with:
          images: dse/sdp
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
      - name: Get package version
        if: startsWith(github.ref, 'refs/tags/')
        id: package
        run: |
          echo "PACKAGE_VERSION=${{ fromJSON(steps.package_meta.outputs.json).labels['org.opencontainers.image.version'] }}" >> $GITHUB_ENV

      - uses: actions/download-artifact@v4
        with:
          name: Models-${{ matrix.package_arch }}-package

      - name: Upload Release Asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
        run: |
          gh release upload "$tag" \
            Models-${{ env.PACKAGE_VERSION }}-${{ matrix.package_arch }}.zip \
            --clobber
